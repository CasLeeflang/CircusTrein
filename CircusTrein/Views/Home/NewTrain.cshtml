@model CircusTrein.Models.AnimalView

@{
    ViewData["Title"] = "NewTrain";
}
@using Logic;
@{ AnimalCollection _animalCollection = new();}

<h1>Create a New Animal Transport List</h1>
<h3>Add animals that need to be transported below.</h3>
<hr />
<div class="container">
    <div class="row">
        <div class="col-md-4 mr-5 mb-5" style="border-radius:5px; background-color:rgb(68 68 68 / 0.15);">
            <form asp-action="AddAnimalToList" style="padding:5px;">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Diet" class="control-label"></label>
                    <select asp-for="Diet" class="form-control">
                        <option value="@null">Select a Diet</option>
                        <option value="0">Herbivore</option>
                        <option value="1">Carnivore</option>
                    </select>
                    <span asp-validation-for="Diet" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Size" class="control-label"></label>
                    <select asp-for="Size" class="form-control">
                        <option value="@null">Select a Size</option>
                        <option value="1">Small</option>
                        <option value="3">Medium</option>
                        <option value="5">Large</option>
                    </select>
                    <span asp-validation-for="Size" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Add To List" class="btn btn-primary" />
                </div>
            </form>
        </div>
        <div>
            <h1 style="border-bottom:1px solid rgb(67 67 67 / 0.28);">Animals to be transported</h1>
            @if (_animalCollection.GetAnimals() == null || !_animalCollection.GetAnimals().Any()) // Check to see if the IENurable is empty
            {
            <h3>No Animals added yet!</h3>
            }
            else
            {
            <table>
                <tr style="border-bottom:1px solid black">
                    <th>Name</th>
                    <th>Size</th>
                    <th>Diet</th>
                </tr>

                @foreach (var animal in _animalCollection.GetAnimals())
                    {
                <tr style="border-bottom:1px solid black">
                    <td style="padding:10px">@animal.Name</td>
                    <td style="padding:10px">
                        @animal.Size
                    </td>


                    <td style="padding:10px">
                        @animal.Diet
                    </td>

                    <td>
                        <input style="transform:scale(0.8);" class="btn btn-primary" type="button" value="Remove" onclick="location.href='@Url.Action("RemoveAnimalFromList", new { animalId = @animal.AnimalId})'" />
                    </td>
                </tr>

                    }
            </table>
            }


            <form method="post" asp-action="GenerateTrain">
                <input class="btn btn-primary mt-3" type="submit" value="Generate Train" />
            </form>


        </div>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
